// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

#ifndef SPDM_PROTOCOL_PCISIG_H_
#define SPDM_PROTOCOL_PCISIG_H_

#include <stdint.h>
#include "status/rot_status.h"

/**
 * PCISIG standard vendor ID
 */
#define SPDM_PCISIG_VENDOR_ID			1

/**
 * PCISIG IDE protocol ID
 */
#define SPDM_PROTOCOL_PCISIG_IDE		0

/**
 * PCISIG TDISP protocol ID
 */
#define SPDM_PROTOCOL_PCISIG_TDISP		1

#pragma pack(push, 1)

/**
 * SPDM PCISIG protocol expected header
 */
struct spdm_protocol_pcisig_header {
	uint8_t	vendor_id_len;		/**< Vendor ID length */
	uint16_t vendor_id;			/**< Vendor ID supposed to be PCISIG */
	uint16_t payload_length;	/**< Payload length */
	uint8_t	protocol_id;		/**< PSISIG protocol ID (IDE|TDISP) */
};

#pragma pack(pop)

#define	SPDM_PCISIG_PROTOCOL_ERROR(code)	ROT_ERROR (ROT_MODULE_SPDM_PCISIG_PROTOCOL, code)

/**
 * Error codes that can be generated by the SPDM PCISIG protocol handler.
 */
enum {
	SPDM_PCISIG_PROTOCOL_INVALID_ARGUMENT = SPDM_PCISIG_PROTOCOL_ERROR (0x00),	/**< Input parameter is null or not valid. */
	SPDM_PCISIG_PROTOCOL_NO_MEMORY = SPDM_PCISIG_PROTOCOL_ERROR (0x01),			/**< Memory allocation failed. */
	SPDM_PCISIG_PROTOCOL_MSG_TOO_SHORT = SPDM_PCISIG_PROTOCOL_ERROR (0x02),		/**< Protocol message is too short. */
	SPDM_PCISIG_PROTOCOL_INVALID_HEADER = SPDM_PCISIG_PROTOCOL_ERROR (0x03),	/**< Invalid message header. */
	SPDM_PCISIG_PROTOCOL_INVALID_RESPONSE = SPDM_PCISIG_PROTOCOL_ERROR (0x04),	/**< Response message layout is invalid. */
};


#endif	/* SPDM_PROTOCOL_PCISIG_H_ */
