// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

#ifndef SPDM_VDM_PROTOCOL_H_
#define SPDM_VDM_PROTOCOL_H_

#include "status/rot_status.h"

/**
 *  SPDM Registry/Standards body Id.
 */
#define SPDM_VDM_REGISTRY_ID_DMTF		0x0
#define SPDM_VDM_REGISTRY_ID_TCG		0x1
#define SPDM_VDM_REGISTRY_ID_USB		0x2
#define SPDM_VDM_REGISTRY_ID_PCISIG		0x3
#define SPDM_VDM_REGISTRY_ID_IANA		0x4
#define SPDM_VDM_REGISTRY_ID_HDBASET	0x5
#define SPDM_VDM_REGISTRY_ID_MIPI		0x6
#define SPDM_VDM_REGISTRY_ID_CXL		0x7
#define SPDM_VDM_REGISTRY_ID_JEDEC		0x8
#define SPDM_VDM_REGISTRY_ID_VESA		0x9
#define SPDM_VDM_REGISTRY_ID_IANA_CBOR	0xa

/**
 * Protocol header for SPDM VDM
 */
struct spdm_protocol_vdm_header {
	uint16_t standard_id;	/**< Registry or standards body ID. */
};

#define	SPDM_VDM_PROTOCOL_ERROR(code)			ROT_ERROR (ROT_MODULE_SPDM_VDM_PROTOCOL, code)

/**
 * Error codes that can be generated by the SPDM VDM protocol handler.
 */
enum {
	SPDM_VDM_PROTOCOL_INVALID_ARGUMENT = SPDM_VDM_PROTOCOL_ERROR (0x00),	/**< Input parameter is null or not valid. */
	SPDM_VDM_PROTOCOL_NO_MEMORY = SPDM_VDM_PROTOCOL_ERROR (0x01),			/**< Memory allocation failed. */
	SPDM_VDM_PROTOCOL_MSG_TOO_SHORT = SPDM_VDM_PROTOCOL_ERROR (0x02),		/**< Protocol message is too short. */
	SPDM_VDM_PROTOCOL_INVALID_RESPONSE = SPDM_VDM_PROTOCOL_ERROR (0x03),	/**< Message response layout is invalid. */
};


#endif	/* SPDM_VDM_PROTOCOL_H_ */
