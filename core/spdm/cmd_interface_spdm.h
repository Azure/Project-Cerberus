// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

#ifndef CMD_INTERFACE_SPDM_H_
#define CMD_INTERFACE_SPDM_H_

#include <stdint.h>
#include "crypto/hash.h"
#include "common/observable.h"
#include "cmd_interface/cmd_interface.h"
#include "spdm_protocol_observer.h"


/**
 * Command interface for processing SPDM protocol responses.
 *
 * TODO:  Rename this to cmd_interface_spdm_requester.
 */
struct cmd_interface_spdm {
	struct cmd_interface base;					/**< Base command interface. */
	struct observable observable;				/**< Observer manager for the interface. */
};


/* TODO:  Observable needs to support const model in order to support static/const instances. */
int cmd_interface_spdm_init (struct cmd_interface_spdm *intf);
void cmd_interface_spdm_deinit (struct cmd_interface_spdm *intf);

int cmd_interface_spdm_add_spdm_protocol_observer (struct cmd_interface_spdm *intf,
	const struct spdm_protocol_observer *observer);
int cmd_interface_spdm_remove_spdm_protocol_observer (struct cmd_interface_spdm *intf,
	const struct spdm_protocol_observer *observer);


#define	CMD_HANDLER_SPDM_ERROR(code)				ROT_ERROR (ROT_MODULE_CMD_HANDLER_SPDM, code)

/**
 * Error codes that can be generated by the command handler.
 *
 * Note: Commented error codes have been deprecated.
 */
enum {
	CMD_HANDLER_SPDM_INVALID_ARGUMENT = CMD_HANDLER_SPDM_ERROR (0x00),		/**< Input parameter is null or not valid. */
	CMD_HANDLER_SPDM_NO_MEMORY = CMD_HANDLER_SPDM_ERROR (0x01),				/**< Memory allocation failed. */
	CMD_HANDLER_SPDM_PAYLOAD_TOO_SHORT = CMD_HANDLER_SPDM_ERROR (0x02),		/**< The request does not contain the minimum amount of data. */
	CMD_HANDLER_SPDM_BAD_LENGTH = CMD_HANDLER_SPDM_ERROR (0x03),			/**< The payload length is wrong for the request. */
	CMD_HANDLER_SPDM_UNKNOWN_COMMAND = CMD_HANDLER_SPDM_ERROR (0x04),		/**< A command does not represent a known request. */
	CMD_HANDLER_SPDM_BUF_TOO_SMALL = CMD_HANDLER_SPDM_ERROR (0x05),			/**< Provided buffer too small for output. */
	CMD_HANDLER_SPDM_UNSUPPORTED_MSG = CMD_HANDLER_SPDM_ERROR (0x06),		/**< Message type not supported. */
	CMD_HANDLER_SPDM_UNSUPPORTED_OPERATION = CMD_HANDLER_SPDM_ERROR (0x07),	/**< The requested operation is not supported. */
	CMD_HANDLER_SPDM_NOT_INTEROPERABLE = CMD_HANDLER_SPDM_ERROR (0x08),		/**< Received message using different specification major version */
	CMD_HANDLER_SPDM_UNSUPPORTED_MEAS_SPEC = CMD_HANDLER_SPDM_ERROR (0x09),	/**< Requested measurement specification unsupported */
	CMD_HANDLER_SPDM_UNSUPPORTED_ASYM_ALGO = CMD_HANDLER_SPDM_ERROR (0x0a),	/**< Requested asymmetric cryptographic algorithm unsupported  */
	CMD_HANDLER_SPDM_UNSUPPORTED_HASH_ALGO = CMD_HANDLER_SPDM_ERROR (0x0b),	/**< Requested hashing algorithm unsupported  */
	CMD_HANDLER_SPDM_UNSUPPORTED_SLOT_ID = CMD_HANDLER_SPDM_ERROR (0x0c),	/**< Requested slot id unsupported  */
	CMD_HANDLER_SPDM_BAD_RESPONSE = CMD_HANDLER_SPDM_ERROR (0x0d),			/**< Received bad response to request */
};


#endif /* CMD_INTERFACE_SPDM_H_ */
