// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

#ifndef KDF_KAT_VECTORS_H_
#define KDF_KAT_VECTORS_H_

#include <stddef.h>
#include <stdint.h>
#include "crypto/hash.h"


/* NIST800-108 KDF SHA-1 */
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA1_KI[];
extern const size_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA1_KI_LEN;
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA1_LABEL[];
extern const size_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA1_LABEL_LEN;
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA1_CONTEXT[];
extern const size_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA1_CONTEXT_LEN;
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA1_KO[];
#define	KDF_KAT_VECTORS_NIST800_108_CTR_SHA1_KO_LEN		20

/* NIST800-108 KDF SHA-256 */
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA256_KI[];
extern const size_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA256_KI_LEN;
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA256_LABEL[];
extern const size_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA256_LABEL_LEN;
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA256_CONTEXT[];
extern const size_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA256_CONTEXT_LEN;
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA256_KO[];
#define	KDF_KAT_VECTORS_NIST800_108_CTR_SHA256_KO_LEN	40

/* NIST800-108 KDF SHA-384 */
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA384_KI[];
extern const size_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA384_KI_LEN;
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA384_LABEL[];
extern const size_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA384_LABEL_LEN;
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA384_CONTEXT[];
extern const size_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA384_CONTEXT_LEN;
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA384_KO[];
#define	KDF_KAT_VECTORS_NIST800_108_CTR_SHA384_KO_LEN	16

/* NIST800-108 KDF SHA-512 */
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA512_KI[];
extern const size_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA512_KI_LEN;
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA512_LABEL[];
extern const size_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA512_LABEL_LEN;
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA512_CONTEXT[];
extern const size_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA512_CONTEXT_LEN;
extern const uint8_t KDF_KAT_VECTORS_NIST800_108_CTR_SHA512_KO[];
#define	KDF_KAT_VECTORS_NIST800_108_CTR_SHA512_KO_LEN	32

/* HKDF-Expand algorithm independent input. */
extern const uint8_t KDF_KAT_VECTORS_HKDF_EXPAND_INFO[];
extern const size_t KDF_KAT_VECTORS_HKDF_EXPAND_INFO_LEN;

/* HKDF-Expand SHA-1 */
extern const uint8_t KDF_KAT_VECTORS_HKDF_EXPAND_SHA1_PRK[];
extern const size_t KDF_KAT_VECTORS_HKDF_EXPAND_SHA1_PRK_LEN;
extern const uint8_t KDF_KAT_VECTORS_HKDF_EXPAND_SHA1_OKM[];
#define	KDF_KAT_VECTORS_HKDF_EXPAND_SHA1_OKM_LEN		42

/* HKDF-Expand SHA-256 */
extern const uint8_t KDF_KAT_VECTORS_HKDF_EXPAND_SHA256_PRK[];
extern const size_t KDF_KAT_VECTORS_HKDF_EXPAND_SHA256_PRK_LEN;
extern const uint8_t KDF_KAT_VECTORS_HKDF_EXPAND_SHA256_OKM[];
#define	KDF_KAT_VECTORS_HKDF_EXPAND_SHA256_OKM_LEN		42

/* HKDF-Expand SHA-384 */
extern const uint8_t KDF_KAT_VECTORS_HKDF_EXPAND_SHA384_PRK[];
extern const size_t KDF_KAT_VECTORS_HKDF_EXPAND_SHA384_PRK_LEN;
extern const uint8_t KDF_KAT_VECTORS_HKDF_EXPAND_SHA384_OKM[];
#define	KDF_KAT_VECTORS_HKDF_EXPAND_SHA384_OKM_LEN		70

/* HKDF-Expand SHA-512 */
extern const uint8_t KDF_KAT_VECTORS_HKDF_EXPAND_SHA512_PRK[];
extern const size_t KDF_KAT_VECTORS_HKDF_EXPAND_SHA512_PRK_LEN;
extern const uint8_t KDF_KAT_VECTORS_HKDF_EXPAND_SHA512_OKM[];
#define	KDF_KAT_VECTORS_HKDF_EXPAND_SHA512_OKM_LEN		74


#endif	/* KDF_KAT_VECTORS_H_ */
