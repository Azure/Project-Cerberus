// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

#ifndef KDF_H_
#define KDF_H_


#include <stdint.h>
#include <stddef.h>
#include "status/rot_status.h"
#include "hash.h"


int kdf_nist800_108_counter_mode (struct hash_engine *hash, enum hmac_hash hash_type, 
	const uint8_t *key_derivation_key, size_t key_derivation_key_len, const uint8_t *label, 
	size_t label_len, const uint8_t *context, size_t context_len, uint8_t *key, uint32_t key_len);

int kdf_hkdf_expand (struct hash_engine *hash, enum hmac_hash hash_type,
	const uint8_t *pseudorandom_key, size_t pseudorandom_key_len, const uint8_t *info,
	size_t info_len, uint8_t *output_keying_material, size_t output_keying_material_len);


#define	KDF_ERROR(code)		ROT_ERROR (ROT_MODULE_KDF, code)

/**
 * Error codes that can be generated by the KDF.
 */
enum {
	KDF_INVALID_ARGUMENT = KDF_ERROR (0x00),				/**< Input parameter is null or not valid. */
	KDF_NO_MEMORY = KDF_ERROR (0x01),						/**< Memory allocation failed. */
	KDF_OPERATION_UNSUPPORTED = KDF_ERROR (0x02),			/**< Requested operation not supported. */
	KDF_BAD_INPUT_DATA = KDF_ERROR (0x03),					/**< Input data is not valid. */
};


#endif /* KDF_H_ */
