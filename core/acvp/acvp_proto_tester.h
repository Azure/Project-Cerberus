// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

#ifndef ACVP_PROTO_TESTER_H_
#define ACVP_PROTO_TESTER_H_

#include <stddef.h>
#include <stdint.h>
#include "status/rot_status.h"


/**
 * Interface for the ACVP Parser library Proto layer.
 */
struct acvp_proto_tester {
	/**
	 * Check an ACVP test input length for validity to execute an ACVP test.
	 *
	 * @param tester The ACVP Proto tester instance.
	 * @param in_len The length of the ACVP test input buffer.
	 *
	 * @return 0 if the input length is valid or an error code.
	 */
	int (*check_input_length) (const struct acvp_proto_tester *tester, size_t in_len);

	/**
	 * Execute an ACVP test and get the test results.
	 *
	 * @param tester The ACVP Proto tester instance.
	 * @param in The input buffer containing the test data.
	 * @param in_len The length of the ACVP test input buffer.
	 * @param out The output buffer to receive the test results.  This will be dynamically allocated
	 * and must be freed by the caller.
	 * @param out_length The length of the output buffer.
	 *
	 * @return 0 if the test was executed successfully or an error code.
	 */
	int (*proto_test_algo) (const struct acvp_proto_tester *tester, const uint8_t *in,
		size_t in_len, uint8_t **out, size_t *out_length);
};


#define ACVP_PROTO_TESTER_ERROR(code)		ROT_ERROR (ROT_MODULE_ACVP_PROTO_TESTER, code)

/**
 * Error codes that can be generated by the ACVP Proto tester interface.
 */
enum {
	ACVP_PROTO_TESTER_INVALID_ARGUMENT = ACVP_PROTO_TESTER_ERROR (0x00),			/**< Input parameter is null or not valid. */
	ACVP_PROTO_TESTER_NO_MEMORY = ACVP_PROTO_TESTER_ERROR (0x01),					/**< Memory allocation failed. */
	ACVP_PROTO_TESTER_LENGTH_TOO_SMALL = ACVP_PROTO_TESTER_ERROR (0x02),			/**< Input length is too small. */
	ACVP_PROTO_TESTER_LENGTH_TOO_LARGE = ACVP_PROTO_TESTER_ERROR (0x03),			/**< Input length is too large. */
	ACVP_PROTO_TESTER_TEST_FAILED = ACVP_PROTO_TESTER_ERROR (0x04),					/**< ACVP test execution failed. */
	ACVP_PROTO_TESTER_CHECK_INPUT_LENGTH_FAILED = ACVP_PROTO_TESTER_ERROR (0x05),	/**< ACVP test input length check failed. */
	ACVP_PROTO_TESTER_PROTO_TEST_ALGO_FAILED = ACVP_PROTO_TESTER_ERROR (0x06),		/**< ACVP proto test algorithm execution failed. */
};


#endif	/* ACVP_PROTO_TESTER_H_ */
