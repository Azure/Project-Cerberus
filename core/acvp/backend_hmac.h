// Copyright (c) Microsoft Corporation. All rights reserved.

#ifndef BACKEND_HMAC_H_
#define BACKEND_HMAC_H_

#include <stdbool.h>
#include <stddef.h>
#include "crypto/hash.h"
#include "parser/parser_hmac.h"


/**
 * Backend engine structure used for HMAC ACVP test handling.
 */
struct backend_hmac_engine {
	int impl_id;						/**< Implementation identifier. */
	const struct hash_engine *engine;	/**< Hash instance to use. */
};


struct hmac_backend* backend_hmac_get_impl ();


void backend_hmac_register_engines (const struct backend_hmac_engine *hmac, size_t num_engines);
void backend_hmac_register_impl (void);


#define BACKEND_HMAC_ERROR(code)		ROT_ERROR (ROT_MODULE_BACKEND_HMAC, code)

/**
 * Error codes that can be generated by backend HMAC handling.
 */
enum {
	BACKEND_HMAC_INVALID_ARGUMENT = BACKEND_HMAC_ERROR (0x00),		/**< Input parameter is null or not valid. */
	BACKEND_HMAC_NO_MEMORY = BACKEND_HMAC_ERROR (0x01),				/**< Memory allocation failed. */
	BACKEND_HMAC_NO_ENGINE = BACKEND_HMAC_ERROR (0x02),				/**< No HMAC engine is available. */
	BACKEND_HMAC_ENGINE_NOT_FOUND = BACKEND_HMAC_ERROR (0x03),		/**< No HMAC engine found for the specified implementation. */
	BACKEND_HMAC_GENERATE_FAILED = BACKEND_HMAC_ERROR (0x04),		/**< HMAC generation failed. */
	BACKEND_HMAC_CMAC_VERIFY_FAILED = BACKEND_HMAC_ERROR (0x05),	/**< CMAC verification failed. */
	BACKEND_HMAC_HASH_TYPE_UNSUPPORTED = BACKEND_HMAC_ERROR (0x06),	/**< Hash type is not supported. */
};


#endif	/* BACKEND_HMAC_H_ */
