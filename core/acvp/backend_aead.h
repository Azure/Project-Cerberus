// Copyright (c) Microsoft Corporation. All rights reserved.

#ifndef BACKEND_AEAD_H_
#define BACKEND_AEAD_H_

#include <stddef.h>
#include "crypto/aes_gcm.h"
#include "crypto/rng.h"
#include "parser/parser_aead.h"


/**
 * Backend engine structure used for AEAD ACVP test handling.
 */
struct backend_aead_engine {
	int impl_id;								/**< Implementation identifier. */
	const struct aes_gcm_engine *gcm_engine;	/**< AES-GCM instance to use. */
	const struct rng_engine *rng;				/**< Random number generator instance used for IV generation. */
};


struct aead_backend* backend_aead_get_impl ();


void backend_aead_register_engines (const struct backend_aead_engine *aead, size_t num_engines);
void backend_aead_register_impl (void);


#define BACKEND_AEAD_ERROR(code)		ROT_ERROR (ROT_MODULE_BACKEND_AEAD, code)

/**
 * Error codes that can be generated by backend AEAD handling.
 */
enum {
	BACKEND_AEAD_INVALID_ARGUMENT = BACKEND_AEAD_ERROR (0x00),		/**< Input parameter is null or not valid. */
	BACKEND_AEAD_NO_MEMORY = BACKEND_AEAD_ERROR (0x01),				/**< Memory allocation failed. */
	BACKEND_AEAD_NO_ENGINE = BACKEND_AEAD_ERROR (0x02),				/**< No AEAD engine is available. */
	BACKEND_AEAD_ENGINE_NOT_FOUND = BACKEND_AEAD_ERROR (0x03),		/**< No AEAD engine found for the specified implementation. */
	BACKEND_AEAD_NO_RNG = BACKEND_AEAD_ERROR (0x04),				/**< No RNG engine found for the specified implementation. */
	BACKEND_AEAD_GCM_ENCRYPT_FAILED = BACKEND_AEAD_ERROR (0x05),	/**< AES-GCM encryption failed. */
	BACKEND_AEAD_GCM_DECRYPT_FAILED = BACKEND_AEAD_ERROR (0x06),	/**< AES-GCM decryption failed. */
	BACKEND_AEAD_CCM_ENCRYPT_FAILED = BACKEND_AEAD_ERROR (0x07),	/**< AES-CCM encryption failed. */
	BACKEND_AEAD_CCM_DECRYPT_FAILED = BACKEND_AEAD_ERROR (0x08),	/**< AES-CCM decryption failed. */
};


#endif	/* BACKEND_AEAD_H_ */
