// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

#ifndef CMD_INTERFACE_IDE_RESPONDER_H
#define CMD_INTERFACE_IDE_RESPONDER_H

#include "ide_driver.h"


/**
 * PCI DOE Vendor Protocol Interface.
 */
struct cmd_interface_ide_responder {
	struct cmd_interface base;				/**< Base command interface. */
	const struct ide_driver *ide_driver;	/**< IDE driver interface. */
};


int cmd_interface_ide_responder_init (struct cmd_interface_ide_responder *ide_interface,
	struct ide_driver *ide_driver);

void cmd_interface_ide_responder_release (const struct cmd_interface_ide_responder *ide_interface);


#define	CMD_INTERFACE_IDE_RESPONDER_ERROR(code)		ROT_ERROR (ROT_MODULE_CMD_INTERFACE_IDE_RESPONDER, code)

/**
 * Error codes that can be generated by the IDE responder.
 */
enum {
	CMD_INTERFACE_IDE_RESPONDER_INVALID_ARGUMENT = CMD_INTERFACE_IDE_RESPONDER_ERROR (0x00),		/**< Input parameter is null or not valid. */
	CMD_INTERFACE_IDE_RESPONDER_NO_MEMORY = CMD_INTERFACE_IDE_RESPONDER_ERROR (0x01),				/**< Memory allocation failed. */
	CMD_INTERFACE_IDE_RESPONDER_INVALID_REQUEST = CMD_INTERFACE_IDE_RESPONDER_ERROR (0x02),			/**< The request is invalid. */
	CMD_INTERFACE_IDE_RESPONDER_UNSUPPORTED_REQUEST = CMD_INTERFACE_IDE_RESPONDER_ERROR (0x03),		/**< The request is unsupported. */
	CMD_INTERFACE_IDE_RESPONDER_PROCESS_REQUEST_FAILED = CMD_INTERFACE_IDE_RESPONDER_ERROR (0x04),	/**< The request processing failed. */
	CMD_INTERFACE_IDE_RESPONDER_INVALID_MSG_SIZE = CMD_INTERFACE_IDE_RESPONDER_ERROR (0x05),		/**< The request message size is invalid. */
	CMD_INTERFACE_IDE_RESPONDER_UNKNOWN_COMMAND = CMD_INTERFACE_IDE_RESPONDER_ERROR (0x06),			/**< The request command is unknown. */
	CMD_INTERFACE_IDE_RESPONDER_UNSUPPORTED_OPERATION = CMD_INTERFACE_IDE_RESPONDER_ERROR (0x07),	/**< The operation is unsupported. */
	CMD_INTERFACE_IDE_RESPONDER_OUT_OF_BUFFER_SPACE = CMD_INTERFACE_IDE_RESPONDER_ERROR (0x08),		/**< The response buffer is too small. */
};


#endif /* CMD_INTERFACE_IDE_RESPONDER_H */