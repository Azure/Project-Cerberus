// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

#ifndef X509_EXTENSION_BUILDER_DME_H_
#define X509_EXTENSION_BUILDER_DME_H_

#include "dme_structure.h"
#include "asn1/x509_extension_builder.h"


/**
 * X.509 extension handler for building a DME extension endorsing a DICE identity key.  The
 * extension builder does not rely on any external components or libraries.
 */
struct x509_extension_builder_dme {
	struct x509_extension_builder base;		/**< Base extension builder API. */
	const struct dme_structure *dme;		/**< The DME structure being encoded in the extension. */
	uint8_t *ext_buffer;					/**< Buffer to use for building the extension data. */
	size_t ext_length;						/**< Length of the extension data duffer. */
};


int x509_extension_builder_dme_init (struct x509_extension_builder_dme *builder,
	const struct dme_structure *dme);
int x509_extension_builder_dme_init_with_buffer (struct x509_extension_builder_dme *builder,
	const struct dme_structure *dme, uint8_t *ext_buffer, size_t buffer_length);
void x509_extension_builder_dme_release (const struct x509_extension_builder_dme *builder);

size_t x509_extension_builder_dme_get_ext_buffer_length (const struct dme_structure *dme);


/* Internal definitions for use by DME extension builders. */
extern const uint8_t X509_EXTENSION_BUILDER_DME_OID[];
extern const size_t X509_EXTENSION_BUILDER_DME_OID_LENGTH;


#define	DME_EXTENSION_ERROR(code)		ROT_ERROR (ROT_MODULE_DME_EXTENSION, code)

/**
 * Error codes that can be generated by a DME extension builder.
 */
enum {
	DME_EXTENSION_INVALID_ARGUMENT = DME_EXTENSION_ERROR (0x00),	/**< Input parameter is null or not valid. */
	DME_EXTENSION_NO_MEMORY = DME_EXTENSION_ERROR (0x01),			/**< Memory allocation failed. */
	DME_EXTENSION_SMALL_EXT_BUFFER = DME_EXTENSION_ERROR (0x02),	/**< The extension buffer is too small for the data. */
	DME_EXTENSION_NO_TYPE_OID = DME_EXTENSION_ERROR (0x03),			/**< The DME structure does not specify a type identifier. */
	DME_EXTENSION_NO_DATA = DME_EXTENSION_ERROR (0x04),				/**< The DME structure does not provide any structure data. */
	DME_EXTENSION_NO_SIG_TYPE_OID = DME_EXTENSION_ERROR (0x05),		/**< The DME structure does not specify a signature type. */
	DME_EXTENSION_NO_SIGNATURE = DME_EXTENSION_ERROR (0x06),		/**< The DME structure does not provide a signature. */
	DME_EXTENSION_NO_DME_KEY = DME_EXTENSION_ERROR (0x07),			/**< The DME structure does not provide a public key. */
};


#endif /* X509_EXTENSION_BUILDER_DME_H_ */
