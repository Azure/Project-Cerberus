// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

#ifndef ASN1_UTIL_H_
#define ASN1_UTIL_H_

#include <stddef.h>
#include <stdint.h>
#include "status/rot_status.h"


int asn1_get_der_item_len (const uint8_t *der, size_t der_len);
size_t asn1_get_der_encoded_length (const uint8_t *der, size_t max_length);

int asn1_encode_integer (uint64_t value, uint8_t *der, size_t length);
int asn1_decode_integer (const uint8_t *der, size_t length, uint64_t *value);

int asn1_encode_base128_oid (const uint8_t *oid, size_t oid_length, uint8_t *der, size_t length);
int asn1_decode_base128_oid (const uint8_t *der, size_t length, const uint8_t **oid,
	size_t *oid_length);


#define	ASN1_UTIL_ERROR(code)			ROT_ERROR (ROT_MODULE_ASN1_UTIL, code)

/**
 * Error codes that can be generated by a ASN.1 handler.
 */
enum {
	ASN1_UTIL_INVALID_ARGUMENT = ASN1_UTIL_ERROR (0x00),	/**< Input parameter is null or not valid. */
	ASN1_UTIL_NO_MEMORY = ASN1_UTIL_ERROR (0x01),			/**< Memory allocation failed. */
	ASN1_UTIL_NOT_VALID = ASN1_UTIL_ERROR (0x02),			/**< ASN.1 decoding failed. */
	ASN1_UTIL_SMALL_DER_BUFFER = ASN1_UTIL_ERROR (0x03),	/**< A DER buffer is not large enough for the encoded data. */
	ASN1_UTIL_OUT_OF_RANGE = ASN1_UTIL_ERROR (0x04),		/**< A value is out of the allowed range for an operation. */
	ASN1_UTIL_UNEXPECTED_TAG = ASN1_UTIL_ERROR (0x05),		/**< The encoded data contained a tag that does not match the expected value. */
};


#endif	/* ASN1_UTIL_H_ */
